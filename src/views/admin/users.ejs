<!DOCTYPE html>
<html lang="en">
	<head>
		<%- include('./partials/head') %>
		<style>
			.recent-product-img {
				width: 50px;
				height: 50px;
				border-radius: 50%;
			}

			.recent-product-img img {
				width: 100%;
				height: 100%;
				padding: 2px;
				border-radius: 50%;
			}

			tbody tr td {
				text-align: center;
				vertical-align: middle;
			}
		</style>
	</head>

	<body class="bg-theme bg-theme13">
		<!--wrapper-->
		<div class="wrapper">
			<!--sidebar wrapper -->
			<%- include('./partials/sidebar') %>
			<!--end sidebar wrapper -->
			<!--start header -->
			<%- include('./partials/header') %>
			<!--end header -->
			<!--start page wrapper -->
			<div class="page-wrapper">
				<div class="page-content">
					<!--breadcrumb-->
					<div class="page-breadcrumb d-none d-sm-flex align-items-center mb-3">
						<div class="breadcrumb-title pe-3">Users</div>
						<div class="ps-3">
							<nav aria-label="breadcrumb">
								<ol class="breadcrumb mb-0 p-0">
									<li class="breadcrumb-item">
										<a href="javascript:;"><i class="bx bx-home-alt"></i></a>
									</li>
									<li class="breadcrumb-item active" aria-current="page">Users</li>
								</ol>
							</nav>
						</div>
					</div>
					<!--end breadcrumb-->
					<div class="card">
						<div class="card-body">
							<div class="d-flex justify-content-end mb-3">
								<button
									type="button"
									class="btn btn-outline-light px-2 me-1"
									data-bs-toggle="modal"
									data-bs-target="#addModal"
								>
									<i class="bx bx-plus-circle me-1"></i>User
								</button>
								<button type="button" id="btn-trash" class="btn btn-outline-light px-2">
									<i class="bx bx-trash me-1"></i><span>Trash</span>
								</button>
							</div>
							<div class="table-responsive">
								<table id="tableUser" class="table table-striped table-bordered" style="width: 100%">
									<thead>
										<tr>
											<th>ID</th>
											<th>Name</th>
											<th>Mail</th>
											<th>Status</th>
											<th>Permission</th>
											<th>Uploaded</th>
											<th>Created</th>
											<th>Updated</th>
											<th>Action</th>
										</tr>
									</thead>
									<tfoot>
										<tr>
											<th>ID</th>
											<th>Name</th>
											<th>Mail</th>
											<th>Status</th>
											<th>Permission</th>
											<th>Uploaded</th>
											<th>Created</th>
											<th>Updated</th>
											<th>Action</th>
										</tr>
									</tfoot>
								</table>
							</div>
						</div>
					</div>
				</div>

				<!-- Modals -->
				<!-- Delete Modals -->
				<div class="modal fade" id="deleteModal" tabindex="-1" aria-hidden="true">
					<div class="modal-dialog">
						<div class="modal-content">
							<div class="modal-header">
								<h5 class="modal-title" id="deleteModalLabel">Delete User</h5>
								<button
									type="button"
									class="btn-close"
									data-bs-dismiss="modal"
									aria-label="Close"
								></button>
							</div>
							<div class="modal-body">
								Are you sure want delete user "<span
									id="user-name-text"
									style="font-weight: 500; color: #fff"
								></span
								>"<span id="permanently-text" class="d-none text-capitalize"> permanently</span>?
							</div>
							<div class="modal-footer">
								<button type="button" class="btn btn-primary text-white bg-gradient-burning btn-delete">
									Delete
								</button>
								<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
							</div>
						</div>
					</div>
				</div>
				<!-- Edit Modals -->
				<div class="modal fade" id="editModal" tabindex="-1" aria-hidden="true">
					<div class="modal-dialog modal-xl modal-dialog-scrollable">
						<div class="modal-content">
							<div class="modal-header">
								<h5 class="modal-title">Edit Member</h5>
								<button
									type="button"
									class="btn-close"
									data-bs-dismiss="modal"
									aria-label="Close"
								></button>
							</div>
							<div class="modal-body">
								<div class="card">
									<div class="card-body">
										<form class="row g-3">
											<div class="col-md-6 mb-3">
												<label class="form-label">Full Name:</label>
												<input
													type="text"
													class="form-control"
													name="fullname"
													placeholder="User Name"
												/>
											</div>
											<div class="col-md-6 mb-3">
												<label class="form-label">Username:</label>
												<input
													type="text"
													class="form-control"
													name="username"
													placeholder="User Name"
												/>
											</div>
											<div class="col-md-6 mb-3">
												<label class="form-label">Email:</label>
												<input
													type="email"
													class="form-control"
													name="email"
													placeholder="Mail"
												/>
											</div>
											<div class="col-md-3 mb-3">
												<label class="form-label">Staus:</label>
												<select class="form-select" name="status">
													<% for(const key in userStatus) { 
														if(userStatus.hasOwnProperty(key)) {
															const status = userStatus[key];	
													%>
													<option value="<%=status%>"><%=key%></option>
													<% }}; %>
												</select>
											</div>
											<div class="col-md-3 mb-3">
												<label class="form-label">Role:</label>
												<select class="form-select" name="role">
													<option value="">--NONE--</option>
													<% roles.forEach(role => { %>
													<option value="<%=role._id%>"><%=role.name.toUpperCase()%></option>
													<% }); %>
												</select>
											</div>
											<div class="col-md-7 mb-3">
												<label class="form-label">Url Avatar:</label>
												<div class="input-group ig-upload-img">
													<input
														type="url"
														class="form-control"
														name="avatar"
														placeholder="Url Avatar"
													/>
													<input
														type="file"
														accept="image/*"
														class="form-control d-none"
														id="upload_avatar"
													/>
													<label class="input-group-text cursor-pointer" for="upload_avatar"
														><i class="bx bx-image-add"></i
													></label>
													<label class="input-group-text btn-upload-img cursor-pointer"
														><i class="me-2 bx bx-cloud-upload"></i>Upload</label
													>
												</div>
											</div>
											<div class="col-md-5 mb-3">
												<label class="form-label">Reset Password:</label>
												<input
													type="text"
													class="form-control"
													name="password"
													placeholder="Reset Password"
												/>
											</div>
											<input name="user_id" style="display: none" />
										</form>
									</div>
								</div>
							</div>
							<div class="modal-footer">
								<button
									type="button"
									class="btn btn-primary text-white bg-gradient-blues btn-save"
									style="border-color: #fff"
								>
									Save changes
								</button>
								<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
							</div>
						</div>
					</div>
				</div>
				<!-- Add Modals -->
				<div class="modal fade" id="addModal" tabindex="-1" aria-hidden="true">
					<div class="modal-dialog modal-xl modal-dialog-scrollable">
						<div class="modal-content">
							<div class="modal-header">
								<h5 class="modal-title">Add Member</h5>
								<button
									type="button"
									class="btn-close"
									data-bs-dismiss="modal"
									aria-label="Close"
								></button>
							</div>
							<div class="modal-body">
								<div class="card">
									<div class="card-body">
										<form class="row g-3">
											<div class="col-md-6 mb-3">
												<label class="form-label">Full Name:</label>
												<input
													type="text"
													class="form-control"
													name="fullname"
													placeholder="User Name"
												/>
											</div>
											<div class="col-md-6 mb-3">
												<label class="form-label">Username:</label>
												<input
													type="text"
													class="form-control"
													name="username"
													placeholder="User Name"
												/>
											</div>
											<div class="col-md-6 mb-3">
												<label class="form-label">Email:</label>
												<input
													type="email"
													class="form-control"
													name="email"
													placeholder="Mail"
												/>
											</div>
											<div class="col-md-3 mb-3">
												<label class="form-label">Staus:</label>
												<select class="form-select" name="status">
													<% for(const key in userStatus) { 
														if(userStatus.hasOwnProperty(key)) {
															const status = userStatus[key];	
													%>
													<option value="<%=status%>"><%=key%></option>
													<% }}; %>
												</select>
											</div>
											<div class="col-md-3 mb-3">
												<label class="form-label">Role:</label>
												<select class="form-select" name="role">
													<option value="">--NONE--</option>
													<% roles.forEach(role => { %>
													<option value="<%=role._id%>"><%=role.name.toUpperCase()%></option>
													<% }); %>
												</select>
											</div>
											<div class="col-md-7 mb-3">
												<label class="form-label">Url Avatar:</label>
												<div class="input-group ig-upload-img">
													<input
														type="url"
														class="form-control"
														name="avatar"
														placeholder="Url Avatar"
													/>
													<input
														type="file"
														accept="image/*"
														class="form-control d-none"
														id="upload_avatar"
													/>
													<label class="input-group-text cursor-pointer" for="upload_avatar"
														><i class="bx bx-image-add"></i
													></label>
													<label class="input-group-text btn-upload-img cursor-pointer"
														><i class="me-2 bx bx-cloud-upload"></i>Upload</label
													>
												</div>
											</div>
											<div class="col-md-5 mb-3">
												<label class="form-label">Password:</label>
												<input
													type="text"
													class="form-control"
													name="password"
													placeholder="Password"
												/>
											</div>
										</form>
									</div>
								</div>
							</div>
							<div class="modal-footer">
								<button
									type="button"
									class="btn btn-primary text-white bg-gradient-blues btn-create"
									style="border-color: #fff"
								>
									Create
								</button>
								<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
							</div>
						</div>
					</div>
				</div>
			</div>
			<!--end page wrapper -->
			<!--start overlay-->
			<div class="overlay toggle-icon"></div>
			<!--end overlay-->
			<!--Start Back To Top Button-->
			<a href="javaScript:;" class="back-to-top"><i class="bx bxs-up-arrow-alt"></i></a>
			<!--End Back To Top Button-->
			<%- include('./partials/footer') %>
		</div>
		<!--end wrapper-->
		<!--start switcher-->
		<%- include('./partials/switcher') %>
		<!--end switcher-->
		<!-- Start Javascript Import -->
		<%- include('./partials/javascript-import') %>
		<script>
			const dataTable = $('#tableUser').DataTable({
				scrollX: true,
				processing: true,
				serverSide: true,
				ajax: {
					url: '/admin/users/datatables_ajax/',
					type: 'POST',
				},
				columns: [
					{ name: 'id' },
					{ name: 'name' },
					{ name: 'mail' },
					{ name: null },
					{ name: null },
					{ name: null },
					{ name: 'createdAt' },
					{ name: 'updatedAt' },
					{ name: null },
				],
				columnDefs: [
					{
						orderable: false,
						targets: [3,4,5,8],
					},
				],
				order: [[6, 'desc']],
				language: {
					processing:
						'<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span><span> Loading...</span>',
				},
			});
			$('#tableUser_filter input')
				.unbind()
				.bind('keyup', function (e) {
					if (e.keyCode == 13) dataTable.search(this.value).draw();
				});

			// Handle create new User
			const btnCreate = document.querySelector('#addModal .modal-footer .btn-create');
			btnCreate.onclick = function () {
				const formCreate = document.querySelector('#addModal form');
				const dataForm = Object.fromEntries(new FormData(formCreate));

				// create new user
				$.ajax({
					type: 'POST',
					url: '/admin/users/create',
					data: dataForm,
				})
					.done(function(res) {
						$('#addModal').modal('hide');
						notyf.success(res.message);
						dataTable.ajax.reload(null, false);
					})
					.fail(function({ responseJSON }) {
						$('#addModal').modal('hide');
						notyf.error(responseJSON.message);
					})
					.always(function() {
						formCreate.reset();
					});
			};

			// Fill name, id of user to delete form
			function fillDataToDeleteForm(name, id) {
				document.querySelector('#permanently-text').classList.add('d-none');
				document.querySelector('#user-name-text').textContent = name;
				document.querySelector('#deleteModal .modal-footer .btn-delete').onclick = function () {
					$.ajax({
						type: 'DELETE',
						url: '/admin/users/delete/' + id,
					})
						.done(function(res) {
							$('#deleteModal').modal('hide');
							dataTable.ajax.reload(null, false);
							notyf.success(res.message);
						})
						.fail(function({ responseJSON }) {
							$('#deleteModal').modal('hide');
							notyf.error(responseJSON.message);
						});
				};
			}

			// Fill name, id of user to modal delete permanently
			function fillDataToDeletePermanentlyForm(name, id) {
				document.querySelector('#permanently-text').classList.remove('d-none');
				document.querySelector('#user-name-text').textContent = name;
				document.querySelector('#deleteModal .modal-footer .btn-delete').onclick = function () {
					$.ajax({
						type: 'DELETE',
						url: '/admin/users/destroy/' + id,
					})
						.done(function(res) {
							$('#deleteModal').modal('hide');
							dataTable.ajax.reload(null, false);
							notyf.success(res.message);
						})
						.fail(function({ responseJSON }) {
							$('#deleteModal').modal('hide');
							notyf.error(responseJSON.message);
						});
				};
			}

			// Fill data of user to edit form
			async function fillDataToEditForm(id) {
				const dataUser = await $.ajax({
					url: '/admin/users/read/' + id,
					type: 'GET',
				});
				const formEdit = document.querySelector('#editModal form');
				formEdit.querySelector('input[name="fullname"]').value = dataUser.fullname;
				formEdit.querySelector('input[name="username"]').value = dataUser.username;
				formEdit.querySelector('input[name="email"]').value = dataUser.email;
				formEdit.querySelector('input[name="avatar"]').value = dataUser.avatar;
				formEdit.querySelector('select[name="status"]').value = dataUser.status;
				formEdit.querySelector('select[name="role"]').value = dataUser.roleId;
				formEdit.querySelector('input[name="user_id"]').value = dataUser._id;

			}
			
			// Handle submit update
			const btnSaveUser = document.querySelector('#editModal .modal-footer .btn-save');
			if (btnSaveUser)
				btnSaveUser.onclick = function () {
					const formEdit = document.querySelector('#editModal form');
					const { user_id: userId, ...dataForm } = Object.fromEntries(new FormData(formEdit));

					// update user info
					$.ajax({
						type: 'PATCH',
						url: '/admin/users/update/' + userId,
						data: dataForm,
					})
						.done(function(res) {
							$('#editModal').modal('hide');
							notyf.success(res.message);
							dataTable.ajax.reload(null, false);
						})
						.fail(function({ responseJSON }) {
							$('#editModal').modal('hide');
							notyf.error(responseJSON.message);
						})
						.always(function() {
							formEdit.reset();
						});
				};

			// Hanlde resotre user
			function restoreUser(id) {
				$.ajax({
					type: 'PATCH',
					url: '/admin/users/restore/' + id,
				})
					.done(function(res) {
						notyf.success(res.message);
						dataTable.ajax.reload(null, false);
					})
					.fail(function({ responseJSON }) {
						notyf.error(responseJSON.message);
					});
			}

			// Handle btn trash onclick
			const btnTrash = document.getElementById('btn-trash');
			if (btnTrash)
				btnTrash.onclick = function () {
					const btnTrashText = btnTrash.querySelector('span');
					const deleted = btnTrashText.innerText === 'Trash';
					btnTrashText.innerText = deleted ? 'All List' : 'Trash';
					deleted
						? dataTable.ajax.url('/admin/users/datatables_ajax/?deleted=true').load()
						: dataTable.ajax.url('/admin/users/datatables_ajax/').load();
				};
		</script>
		<!-- End Javascript Import -->
	</body>
</html>
